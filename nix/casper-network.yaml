apiVersion: v1
kind: Service
metadata:
  name: casper-node
  labels:
    app: casper-node
spec:
  clusterIP: None
  selector:
    app: casper-node
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: casper-node
spec:
  serviceName: "casper-node"
  podManagementPolicy: "Parallel"
  replicas: 5
  selector:
    matchLabels:
      app: casper-node
  template:
    metadata:
      labels:
        app: casper-node
    spec:
      volumes:
        - name: chain-map
          configMap:
            name: chain-map
      initContainers:
        - name: init-node
          image: busybox:1.28
          command: [
              "sh",
              "-c",
              "mkdir /chain-temp;
              cd /chain-temp;
              tar xvf /chain-map/chain_map.tar.xz;
              cp -vr chain/ ../config/;
              export NODE_INDEX=${HOSTNAME##*-};
              cp -vr node-${NODE_INDEX}/ ../config/node;
              echo 'all done initializing';
              ",
            ]
          volumeMounts:
            # The stored network definition
            - name: chain-map
              mountPath: "/chain-map"
              readOnly: true
            # Volume that holds the configuration
            - name: config
              mountPath: /config
      terminationGracePeriodSeconds: 5
      containers:
        - name: node
          image: clmarc/casper-node:91a5d7a0 # TODO: Dynamically set.
          # The args override some settings from environment variables.
          args:
            [
              "validator",
              "/config/node/config.toml",
              "-C",
              "network.public_address=$(POD_IP):34553",
            ]
          #image: busybox:latest
          #command: ["/bin/sh", "-c", "echo $POD_IP > /PODIP; sleep 230000"]
          env:
            - name: RUST_LOG
              value: info
            - name: RUST_BACKTRACE
              value: "1"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            limits:
              cpu: "500m"
              memory: "1000Mi"
            requests:
              cpu: "250m"
              memory: "500Mi"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: storage
              mountPath: /storage
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "longhorn"
        resources:
          requests:
            storage: 5Mi
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "longhorn"
        resources:
          requests:
            storage: 1Gi
