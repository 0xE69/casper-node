[genesis]
name = 'test-chain'
timestamp = '2020-09-18T18:45:00Z'
protocol_version = '0.1.0'
mint_installer_path = 'mint.wasm'
pos_installer_path = 'pos.wasm'
standard_payment_installer_path = 'standard_payment.wasm'
auction_installer_path = 'auction_install.wasm'
accounts_path = 'accounts.csv'

[highway]
genesis_era_start_timestamp = '2020-09-18T18:45:00Z'
era_duration = '3minutes'
minimum_era_height = 9
booking_duration = '4hours'
entropy_duration = '5days'
voting_period_duration = '6weeks'
finality_threshold_percent = 8
minimum_round_exponent = 13

[deploys]
max_payment_cost = '9'
max_ttl = '10months'
max_dependencies = 11
max_block_size = 12
block_max_deploy_count = 125
block_gas_limit = 13

[wasm_config]
initial_mem = 17
max_stack_height = 19

[wasm_config.opcode_costs]
regular = 13
div = 14
mul = 15
mem = 16
grow_mem = 18
opcodes_mul = 20
opcodes_div = 21

[wasm_config.storage_costs]
gas_per_byte = 101

# Host function declarations are located in smart_contracts/contract/src/ext_ffi.rs
[wasm_config.host_function_costs]
add = { cost = 101 }
add_associated_key = { cost = 102 }
add_contract_version = { cost = 103 } # Not instrumented yet, assuming a sufficiently large number
add_local = { cost = 104, arguments = [105, 106] }
call_contract = { cost = 107, arguments = [108] }
call_versioned_contract = { cost = 109, arguments = [120] } # Not instrumented yet, assuming the same as call_contract
create_contract_package_at_hash = { cost = 121 } # Not instrumented yet, assuming a sufficiently large number
create_contract_user_group = { cost = 122 } # Not instrumented yet, assuming a sufficiently large number
create_purse = { cost = 123 }
disable_contract_version = { cost = 124 } # Not instrumented yet, assuming a sufficiently large number
get_balance = { cost = 125 }
get_blocktime = { cost = 126 }
get_caller = { cost = 127 }
get_key = { cost = 128, arguements = [129] }
get_main_purse = { cost = 130 }
get_named_arg = { cost = 131, arguments = [132] }
get_named_arg_size = { cost = 133 }
get_phase = { cost = 134 }
get_system_contract = { cost = 135 }
has_key = { cost = 136, arguments = [137] }
is_valid_uref = { cost = 138 }
load_named_keys = { cost = 139 }
new_uref = { cost = 140, arguments = [141] }
provision_contract_user_group_uref = { cost = 142 } # Not instrumented yet, assuming a sufficiently large number
put_key = { cost = 143, arguments = [144] }
read_host_buffer = { cost = 145, arguments = [146] }
read_value = { cost = 147 }
read_value_local = { cost = 148, arguments = [149] }
remove_associated_key = { cost = 150 }
remove_contract_user_group = { cost = 151 }# Not instrumented yet, assuming a sufficiently large number
remove_contract_user_group_urefs = { cost = 152 } # Not instrumented yet, assuming a sufficiently large number
remove_key = { cost = 153, arguments = [154] }
ret = { cost = 155, arguments = [156, 157] }
revert = { cost = 158 }
set_action_threshold = { cost = 159 }
transfer_from_purse_to_account = { cost = 160 }
transfer_from_purse_to_purse = { cost = 161 }
transfer_to_account = { cost = 162 }
update_associated_key = { cost = 163 }
write = { cost = 164, arguments = [165] }
write_local = { cost = 166, arguments = [167, 168] }
print = { cost = 169, arguments = [170] }

[[upgrade]]
protocol_version = '0.2.0'
upgrade_installer_path = 'upgrade.wasm'

[upgrade.activation_point]
rank = 23

[upgrade.new_wasm_config]
initial_mem = 17
max_stack_height = 19

[upgrade.new_wasm_config.opcode_costs]
regular = 24
div = 25
mul = 26
mem = 27
grow_mem = 29
opcodes_mul = 31
opcodes_div = 32

[upgrade.new_wasm_config.storage_costs]
gas_per_byte = 101

[upgrade.new_wasm_config.host_function_costs]
add = { cost = 1010 }
add_associated_key = { cost = 1020 }
add_contract_version = { cost = 1030 } # Not instrumented yet, assuming a sufficiently large number
add_local = { cost = 1040, arguments = [1050, 1060] }
call_contract = { cost = 1070, arguments = [1080] }
call_versioned_contract = { cost = 1090, arguments = [1200] } # Not instrumented yet, assuming the same as call_contract
create_contract_package_at_hash = { cost = 1210 } # Not instrumented yet, assuming a sufficiently large number
create_contract_user_group = { cost = 1220 } # Not instrumented yet, assuming a sufficiently large number
create_purse = { cost = 1230 }
disable_contract_version = { cost = 1240 } # Not instrumented yet, assuming a sufficiently large number
get_balance = { cost = 1250 }
get_blocktime = { cost = 1260 }
get_caller = { cost = 1270 }
get_key = { cost = 1280, arguements = [1290] }
get_main_purse = { cost = 1300 }
get_named_arg = { cost = 1310, arguments = [1320] }
get_named_arg_size = { cost = 1330 }
get_phase = { cost = 1340 }
get_system_contract = { cost = 1350 }
has_key = { cost = 1360, arguments = [1370] }
is_valid_uref = { cost = 1380 }
load_named_keys = { cost = 1390 }
new_uref = { cost = 1400, arguments = [1410] }
provision_contract_user_group_uref = { cost = 1420 } # Not instrumented yet, assuming a sufficiently large number
put_key = { cost = 1430, arguments = [1440] }
read_host_buffer = { cost = 1450, arguments = [1460] }
read_value = { cost = 1470 }
read_value_local = { cost = 1480, arguments = [1490] }
remove_associated_key = { cost = 1500 }
remove_contract_user_group = { cost = 1510 }# Not instrumented yet, assuming a sufficiently large number
remove_contract_user_group_urefs = { cost = 1520 } # Not instrumented yet, assuming a sufficiently large number
remove_key = { cost = 1530, arguments = [1540] }
ret = { cost = 1550, arguments = [1560, 1570] }
revert = { cost = 1580 }
set_action_threshold = { cost = 1590 }
transfer_from_purse_to_account = { cost = 1600 }
transfer_from_purse_to_purse = { cost = 1610 }
transfer_to_account = { cost = 1620 }
update_associated_key = { cost = 1630 }
write = { cost = 1640, arguments = [1650] }
write_local = { cost = 1660, arguments = [1670, 1680] }
print = { cost = 1690, arguments = [1700] }

[upgrade.new_deploy_config]
max_payment_cost = '34'
max_ttl = '35years'
max_dependencies = 36
max_block_size = 37
block_max_deploy_count = 375
block_gas_limit = 38

[[upgrade]]
protocol_version = '0.3.0'

[upgrade.activation_point]
rank = 39
