---
platform:
  os: linux
  arch: amd64

# Begin
clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
    image: "rust:latest"

__buildenv: &buildenv
  image: "rust:latest"

kind: pipeline
name: cargo

steps:
- name: cargo-fmt
  <<: *buildenv
  commands:
  - rustup component add rustfmt
  - cargo fmt -- --check

- name: cargo-clippy
  <<: *buildenv
  environment:
    RUSTFLAGS: '-D warnings'
  commands:
  - rustup component add clippy
  - cargo clippy --all-targets

- name: cargo-check
  <<: *buildenv
  environment:
    RUSTFLAGS: '-D warnings'
  commands:
  - cargo check

- name: cargo-test
  <<: *buildenv
  commands:
  - cargo test

trigger:
  branch:
  - master
  - trying
  - staging

---
kind: pipeline
name: failed-build-alert

clone:
  disable: true

steps:
- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      signer-repo build status: *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
  - failure
  branch:
  - master
  - trying
  - staging

depends_on:
- cargo
